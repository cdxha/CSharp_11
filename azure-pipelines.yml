# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: lab.devsecops.com

steps:
- task: Bash@3
  displayName: 'Create Fortify App'
  inputs:
    targetType: 'inline'
    script: |
      java -jar /opt/fcli/fcli.jar ssc session login --url https://lab.devsecops.com:8443/ssc/ --token YWE4ZDgwM2ItNDQ0Yy00ZDkwLWFkOTItZDc3YmEzM2IyYzk4
      java -jar /opt/fcli/fcli.jar ssc appversion create $(Build.Repository.Name):$(Build.SourceBranchName) --issue-template 'Prioritized High Risk Issue Template' --skip-if-exists  --auto-required-attrs --session default
      java -jar /opt/fcli/fcli.jar ssc session logout --no-revoke-token
      java -jar /opt/fcli/fcli.jar ssc session list


- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      output=$(/opt/fortify/tools/bin/scancentral -sscurl "https://lab.devsecops.com:8443/ssc/" -ssctoken "aa8d803b-444c-4d90-ad92-d77ba33b2c98" start -upload --application $(Build.Repository.Name) --application-version $(Build.SourceBranchName) -uptoken "aa8d803b-444c-4d90-ad92-d77ba33b2c98") 
      
      echo "Saída recebida: $output"
      
      if [[ "$output" == *"Error generating scan specification"* ]] || [[ "$output" == *"ScanCentral MSBuild execution failed"* ]]; then
        echo "Erro encontrado: $output"
        exit 1
      fi

      jobtoken=$(echo "$output" | tail -c 38 | xargs)

      while($true){
          
      $jobStatus = java -jar "opt/fortify-api-client-latest.jar" checkCloudscanStatus -jt $jobtoken
      Write-Output $jobStatus
                            
      if ($jobStatus -like ("*UPLOAD_COMPLETED*")){
          echo "Cloudscan Job completed."
          sleep 10
          break
      }
      elseif ($jobStatus -like ("*ERROR*") -or $jobStatus -like ("*FAILED*") -or $jobStatus -like ("*FAULTED*") -or $jobStatus -like ("*CANCELED*")){
          Write-Error -Message "Error ao executar o scan. Current status: $jobStatus. Consulte os logs do Fortify para obter mais detalhes"
          return
      }
      else{
          echo "Waiting job to process. Current status: $jobStatus"
          sleep 30
      }
      }
      java -jar "opt/fortify-api-client-latest.jar" waitArtifactProcess -n $(Build.Repository.Name) -version $(Build.SourceBranchName);

      $reportfortify = java -jar "opt/fortify-api-client-latest.jar" legacyReport -n $(Build.Repository.Name) -version $(Build.SourceBranchName);

      echo $reportfortify;

      if ($reportfortify -like ("*- 0 Criticas (Novas)*")){
          Write-Output  "Análise Fortify SAST concluída com sucesso. Nenhum problema critico encontrado."                              
      }
      else{
          Write-Error -Message "Error na  build $(Build.Repository.Name) [$(Build.SourceBranchName)] devido a problemas críticos de seguranca na análise Fortify SAST." -ErrorAction Stop
      }

