# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: lab.devsecops.com

steps:
- task: Bash@3
  displayName: 'Create Fortify App'
  inputs:
    targetType: 'inline'
    script: |
      java -jar /opt/fcli/fcli.jar ssc session login --url https://lab.devsecops.com:8443/ssc/ --token YWE4ZDgwM2ItNDQ0Yy00ZDkwLWFkOTItZDc3YmEzM2IyYzk4
      java -jar /opt/fcli/fcli.jar ssc appversion create $(Build.Repository.Name):$(Build.SourceBranchName) --issue-template 'Prioritized High Risk Issue Template' --skip-if-exists  --auto-required-attrs --session default
      java -jar /opt/fcli/fcli.jar ssc session logout --no-revoke-token
      java -jar /opt/fcli/fcli.jar ssc session list


- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
  
      # Executar o comando e capturar a saída padrão e de erro
      output=$(/opt/fortify/tools/bin/scancentral -sscurl "https://lab.devsecops.com:8443/ssc/" -ssctoken "aa8d803b-444c-4d90-ad92-d77ba33b2c98" start -bf teste.sln -upload --application "$(Build.Repository.Name)" --application-version "$(Build.SourceBranchName)" -uptoken "aa8d803b-444c-4d90-ad92-d77ba33b2c98" 2>&1)

      # Imprimir a saída completa para depuração
      echo "Saída do comando: $output"

      # Extrair o jobtoken da saída
      jobtoken=$(echo "$output" | tail -c 38 | xargs)

      echo "$jobtoken"